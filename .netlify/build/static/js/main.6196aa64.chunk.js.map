{"version":3,"sources":["components/Task.js","App.js","index.js"],"names":["Task","moveHandler","deleteHandler","item","id","className","onClick","xmlns","width","height","fill","viewBox","d","App","useState","JSON","parse","localStorage","getItem","task","storage","setStorageUpdate","input","setInput","direction","position","findIndex","Error","length","newItems","filter","i","splice","setItem","stringify","filteredItem","console","log","stringifiedData","idHandler","idArray","map","Math","max","onSubmit","e","preventDefault","addTaskHandler","onChange","target","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6196aa64.chunk.js","sourcesContent":["import React from \"react\"\nconst UP = -1\nconst DOWN = 1\n\nexport default function Task({ moveHandler, deleteHandler, item, id }) {\n\n    return (\n        <div id={id} className=\"text-light m-2 d-flex container bg-dark p-2 rounded justify-content-sm-between\">\n\n            <li className=\"h5 px-5\">{item}</li>\n            <div>\n                <button\n                    onClick={() => moveHandler(id, UP)}\n                    className=\"btn mx-1 btn-success\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-caret-up-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"m7.247 4.86-4.796 5.481c-.566.647-.106 1.659.753 1.659h9.592a1 1 0 0 0 .753-1.659l-4.796-5.48a1 1 0 0 0-1.506 0z\" />\n                    </svg></button>\n                <button\n                    onClick={() => moveHandler(id, DOWN)}\n                    className=\"btn mx-1 btn-success\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-caret-down-fill\" viewBox=\"0 0 16 16\">\n                        <path d=\"M7.247 11.14 2.451 5.658C1.885 5.013 2.345 4 3.204 4h9.592a1 1 0 0 1 .753 1.659l-4.796 5.48a1 1 0 0 1-1.506 0z\" />\n                    </svg>\n                </button>\n                <button\n                    onClick={() => deleteHandler(id)}\n                    className=\"btn mx-1 btn-danger\"\n                >\n                    Delete\n                </button>\n            </div>\n        </div>\n    )\n}","import { useState, useEffect } from \"react\";\nimport Task from \"./components/Task\";\nconst UP = -1\nconst DOWN = 1\n\nfunction App() {\n\n  const [storage, setStorageUpdate] = useState(JSON.parse(localStorage.getItem(\"List\"))\n    || [{ task: \"Task A\", id: 1 }, { task: \"Task B\", id: 2 }, { task: \"Task C\", id: 3 }])\n  const [input, setInput] = useState(\"\")\n\n\n  function moveHandler(id, direction) {\n\n    const position = storage.findIndex((item) => item.id === id)\n    if (position < 0) {\n      throw new Error(\"Given item not found.\")\n    } else if (direction === UP && position === 0 || direction === DOWN && position === storage.length - 1) {\n      return\n    }\n    const item = storage[position]\n    const newItems = storage.filter((i) => i.id !== id)\n    newItems.splice(position + direction, 0, item)\n    setStorageUpdate(newItems)\n    localStorage.setItem(\"List\", JSON.stringify(newItems))\n\n  }\n\n  function deleteHandler(id) {\n    let filteredItem = storage.filter((item) => { return item.id !== id })\n    console.log(filteredItem)\n    setStorageUpdate(filteredItem)\n    localStorage.setItem(\"List\", JSON.stringify(filteredItem))\n\n  }\n\n  if (!input) {\n    localStorage.setItem(\"List\", JSON.stringify(storage))\n  }\n\n  if (!storage) {\n    let stringifiedData = JSON.stringify(storage)\n    localStorage.setItem(\"List\", stringifiedData)\n  }\n\n  function idHandler() {\n\n    let idArray = storage.map((item) => item.id)\n    console.log(idArray.length)\n    if (!idArray.length) {\n      return 1\n    }\n\n    return Math.max(...idArray) + 1\n  }\n\n\n  function addTaskHandler(e) {\n    e.preventDefault();\n    if (input === \"\") {\n      return\n    }\n    setStorageUpdate([...storage, { task: input, id: idHandler() }])\n    setInput(\"\")\n  }\n\n\n  return (\n\n    <div className=\"container\">\n      <h1 className=\" text-center\">\n        App-List\n      </h1>\n      <form onSubmit={(e) => addTaskHandler(e)}\n        className=\"d-flex justify-content-center\">\n        <input\n          onChange={\n            (e) => {\n              setInput(e.target.value)\n            }\n\n          }\n          value={input}\n        />\n        <button\n          onClick={() => { }}\n          className=\"btn mx-1 btn-primary\">Add Task</button>\n      </form>\n      <div className=\"d-flex my-4 justify-content-center\">\n        <ul>\n          {storage.map((item) => <Task\n            key={item.id}\n            id={item.id}\n            item={item.task}\n            deleteHandler={deleteHandler}\n            moveHandler={moveHandler}\n          />\n\n          )}\n\n\n        </ul>\n      </div>\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}